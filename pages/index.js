import Head from "next/head";
import {useState} from 'react';
import { useRouter } from 'next/router'
import Today_highlight from "./components/Today_highlight";
import Weather_Today from "./components/Weather_Today";
import Weather_week from "./components/Weather_week";

export default function Home({ results, results1 }) {
  console.log("res1 = ",results1);
  const router = useRouter()
  const [city, setCity] = useState('');

  const handleChange = (e) => {
    setCity(e.target.value);  
    //console.log(city)
  }

  const handleSubmit = (e) => {
    //console.log("%c ClickSubmit","font-size:12px; color:green; padding:10px;")
    router.push(`/?term=${city}`);
  }

  const kelvinToCelcius = (temp) => {
    return (temp - 273.15).toPrecision(4)+" Â°C";
  }

  return (
    <>
      <Head>
        <title>Weather-Lytics</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="min-h-full bg-red-400 flex flex-col lg:flex-row">
        <label htmlFor="inputcity" className="w-15">Enter City</label>
        <input
          type="email"
          className="form-control w-56 h-8"
          id="inputcity"
          value={city}
          placeholder="Enter city"
          onChange={handleChange}
        />
        <button className="p-1 bg-slate-600 m-auto p-auto" onClick={()=>handleSubmit()}> Click Button</button>
        <div className="bg-blue-300 w-full lg:w-1/4 lg:h-full">
          <Weather_Today results={results} kelvinToCelcius={kelvinToCelcius}/>
        </div>
        <div className="bg-green-500 w-full lg:h-full ">
          <div className="min-h-full flex flex-col">
            <div className="bg-yellow-400 w-full">
              <Weather_week results1={results1} kelvinToCelcius={kelvinToCelcius} />
            </div>
            <div className="bg-orange-600 w-full">
              <Today_highlight results={results} kelvinToCelcius={kelvinToCelcius} />
            </div>
          </div>
        </div>
      </div>
    </>
  );
}

export async function getServerSideProps({query}) {
  
  // if there is no query
  if(!query.term) 
    query.term = 'Bhopal'

  //api-1
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${query.term}&appid=${process.env.NEXT_PUBLIC_API_KEY_1}`;
  const res = await fetch(url);
  const data = await res.json();
  //console.log(data);

  //api-2
  const url1 = `http://api.openweathermap.org/data/2.5/forecast/daily?q=${query.term}&appid=${process.env.NEXT_PUBLIC_API_KEY_1}`;
  const res1 = await fetch(url1);
  const data1 = await res1.json();
  //console.log(data1);

  return {
    props: {
      results: data,
      results1: data1,
    },
  };
}
